{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/virgin1 copy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { link } from \"fs\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Todo from \"./Todo\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport db from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\"); // when the App loads, we need to listen to the database and fetch new todos as they get added/removed\n\n  useEffect(() => {\n    db.collection(\"todos\").onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => doc.data().todo));\n    });\n  }, []);\n\n  const addTodo = event => {\n    event.preventDefault(); // don't refresh the page when we hit the btn\n\n    db.collection('todos').add({\n      todo: inp\n    });\n    setTodos([...todos, input]);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Write a todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !input,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        onClick: addTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        text: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aBuT34JNwd8LyXTQ9WrzrPbS1yI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ben/Desktop/virgin1 copy/src/App.js"],"names":["link","React","useState","useEffect","Todo","Button","FormControl","Input","InputLabel","db","App","todos","setTodos","input","setInput","collection","onSnapshot","snapshot","docs","map","doc","data","todo","addTodo","event","preventDefault","add","inp","target","value"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,IAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,KAA9B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,OAAOC,EAAP,MAAe,YAAf;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAGb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkCC,QAAQ,IAAI;AAC5CL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAGA,GAAG,CAACC,IAAJ,GAAWC,IAAnC,CAAD,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACC,cAAN,GADuB,CAEvB;;AACAhB,IAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBW,GAAvB,CAA2B;AAACJ,MAAAA,IAAI,EAAEK;AAAP,KAA3B;AACAf,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,KAAX,CAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAED,KAFT;AAGE,UAAA,QAAQ,EAAEW,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd;AAH7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAE,CAAChB,KADb;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAEU,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAsBE;AAAA,gBACGZ,KAAK,CAACQ,GAAN,CAAUG,IAAI,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GArDQZ,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import { link } from \"fs\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Todo from \"./Todo\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport db from \"./firebase\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n  // when the App loads, we need to listen to the database and fetch new todos as they get added/removed\n  useEffect(() => {\n    db.collection(\"todos\").onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc=> doc.data().todo));\n    });\n  }, []);\n  const addTodo = event => {\n    event.preventDefault();\n    // don't refresh the page when we hit the btn\n    db.collection('todos').add({todo: inp})\n    setTodos([...todos, input]);\n    setInput(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hi</h1>\n      <form action=\"\">\n        <FormControl>\n          <InputLabel>Write a todo</InputLabel>\n          <Input\n            type=\"text\"\n            value={input}\n            onChange={event => setInput(event.target.value)}\n          />\n        </FormControl>\n        <Button\n          disabled={!input}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={addTodo}\n        >\n          Add Todo\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map(todo => (\n          <Todo text={todo} />\n        ))}\n      </ul>\n\n      {/* \n      <GlobalStyle />\n      <Button>Primary Btn</Button>\n      <Button secondary>Secondary Btn</Button>\n      <Button disabled>Disabled Btn</Button>\n      <Button large>Large Btn</Button> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}